name: Stock Data Ingestion

on:
  schedule:
    - cron: '0 14 * * *'  # Daily at 8 AM CST
  workflow_dispatch:
    inputs:
      mode:
        description: 'Ingestion mode (daily or backfill)'
        required: false
        default: 'daily'
      from_date:
        description: 'Backfill start date (YYYY-MM-DD)'
        required: false
      to_date:
        description: 'Backfill end date (YYYY-MM-DD)'
        required: false

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install awscli  

    - name: Create .env file from inputs
      run: |
        echo "POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}" > .env
        echo "MODE=${{ github.event.inputs.mode || 'daily' }}" >> .env
        if [ "${{ github.event.inputs.mode }}" == "backfill" ]; then
          echo "FROM_DATE=${{ github.event.inputs.from_date }}" >> .env
          echo "TO_DATE=${{ github.event.inputs.to_date }}" >> .env
        fi

    - name: Set AWS credentials
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

    - name: Run ingestion script
      run: python stock_pipeline/scripts/polygon_ingest.py

    - name: Upload folder to S3
      run: |
        if [ "${{ github.event.inputs.mode }}" == "backfill" ]; then
          aws s3 cp stock_pipeline/daily/${{ github.event.inputs.to_date }}/ s3://e2e-stock-pipeline-data/stock_pipeline/backfill/${{ github.event.inputs.to_date }}/ --recursive
        else
          CST_DATE=$(date -u -d '1 day ago 6 hours ago' +'%Y-%m-%d')
          aws s3 cp stock_pipeline/daily/$CST_DATE/ s3://e2e-stock-pipeline-data/stock_pipeline/daily/$CST_DATE/ --recursive
        fi

    - name: Clean up local folders
      run: |
        python stock_pipeline/scripts/archive_and_cleanup.py
