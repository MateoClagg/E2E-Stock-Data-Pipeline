[build-system]
requires = [
  "setuptools>=77",      
  "wheel",
  "setuptools_scm[toml]>=8"
]
build-backend = "setuptools.build_meta"

[project]
name = "stock-pipeline"
dynamic = ["version"]
description = "E2E stock data pipeline (Bronze â†’ Silver)"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [{name = "Mateo Clagg", email = "mateo.clagg@gmail.com"}]
keywords = ["etl", "data-pipeline", "databricks", "stocks"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

# Core dependencies for both local and Databricks environments
dependencies = [
    # API and HTTP
    "requests==2.32.3",
    "aiohttp==3.12.14",
    "python-dotenv==1.0.1",
    "pydantic==2.9.2",
    "protobuf>=3.20.3,<5",
    
    # Local ingestion dependencies
    "polars>=0.20.0",
    "pyarrow>=15.0.0", 
    "boto3>=1.34.0",
    "tenacity>=8.2.0",
    
    # Data quality (existing)
    "great-expectations==0.18.11"
]

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true
license-files = []

[tool.setuptools.packages.find]
where = ["."]
include = ["bronze*", "silver*", "validation*", "stock_pipeline*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.csv", "*.yaml", "*.yml"]

[tool.setuptools_scm]
# Dynamic versioning with setuptools_scm
local_scheme = "no-local-version"  # Clean releases only - will error on dirty tree for tagged builds
version_scheme = "guess-next-dev"
fallback_version = "0.0.0+unknown"

# Security: CRITICAL - This will cause tagged builds to FAIL on dirty trees
# This prevents accidental releases of uncommitted code
git_describe_command = "git describe --dirty --tags --long --match 'v[[:digit:]]*'"
